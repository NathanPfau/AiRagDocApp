/*
Glass class code is a modified version of code originally found at:
https://codepen.io/simeydotme/pen/qEBmggz
Original Author: Simon Goellner
*/
.glass {
  display: flex;
  overflow: hidden;
  position: relative;
  transform: translate3d(0, 0, 0.01px);
  opacity: 0.999;
  background: hsl(205deg 0% 0% / 0.8);
  backdrop-filter: blur(9px) brightness(1.1);
  border-radius: 30px;
  padding: 0.4em;
  box-shadow: 
    0 4px 20px hsl(205deg 50% 30% / 0.15),
    0 4px 10px hsl(205deg 30% 10% / 0.075),
    inset 0 -4px 15px 6px hsl(205deg 70% 90% / 0.2),
    inset 0 -2px 5px hsl(205deg 70% 90% / 0.15),
    inset 0 -1px 1px hsl(205deg 70% 90% / 0.4),
    inset 0 10px 15px hsl(205deg 30% 10% / 0.2),
    inset 0 1px 2px hsl(205deg 70% 90% / 0.3);
}

.glass.chat{
  border-radius: 30px;
  background: "black"
}

/*
Shiny class code is a modified version of code originally found at:
https://codepen.io/hexagoncircle/pen/MWMqXbK
Original Author: Ryan Mulligan
*/
:root {
  --shiny-cta-bg: #000000;
  --shiny-cta-bg-subtle: #1a1818;
  --shiny-cta-fg: #ffffff;
  --shiny-cta-highlight: blue;
  --shiny-cta-highlight-subtle: #8484ff;
}

@property --gradient-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

@property --gradient-angle-offset {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

@property --gradient-angle2 {
  syntax: "<angle>";
  initial-value: 180deg;
  inherits: false;
}

@property --gradient-angle2-offset {
  syntax: "<angle>";
  initial-value: 180deg;
  inherits: false;
}

@property --gradient-percent {
  syntax: "<percentage>";
  initial-value: 5%;
  inherits: false;
}

@property --gradient-shine {
  syntax: "<color>";
  initial-value: white;
  inherits: false;
}

.shiny {
  --shadow-size: 2px;
  isolation: isolate;
  
  background-position: center, center, center;
  background-size: cover, cover, cover;
  box-shadow: inset 0 0 0 1px var(--shiny-cta-bg-subtle);

  &::before,
  &::after,
  span::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset-inline-start: 50%;
    inset-block-start: 50%;
    translate: -50% -50%;
    z-index: -1;
  }

}

.shiny.sidebar {
  --shadow-size: 2px;
  isolation: isolate;
  position: relative;
  overflow: hidden;
  outline-offset: 4px;
  padding: 1.25rem 2.5rem;
  border: 1px solid transparent;
  color: var(--shiny-cta-fg);
  background: 
  linear-gradient(var(--shiny-cta-bg), var(--shiny-cta-bg)) padding-box,
  conic-gradient(
    from calc(var(--gradient-angle) + 165deg - var(--gradient-angle-offset)),
    transparent,
    var(--shiny-cta-highlight) var(--gradient-percent),
    var(--gradient-shine) calc(var(--gradient-percent) * 2),
    var(--shiny-cta-highlight) calc(var(--gradient-percent) * 3),
    transparent calc(var(--gradient-percent) * 4)
  ) border-box,
  conic-gradient(
    from calc(var(--gradient-angle) + 345deg - var(--gradient-angle-offset)),
    transparent,
    var(--shiny-cta-highlight) var(--gradient-percent),
    var(--gradient-shine) calc(var(--gradient-percent) * 2),
    var(--shiny-cta-highlight) calc(var(--gradient-percent) * 3),
    transparent calc(var(--gradient-percent) * 4)
  ) border-box;
  background-position: center, center, center;
  background-size: cover, cover, cover;
  box-shadow: inset 0 0 0 1px var(--shiny-cta-bg-subtle);

  &::before,
  &::after,
  span::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset-inline-start: 50%;
    inset-block-start: 50%;
    translate: -50% -50%;
    z-index: -1;
  }
}

/* Dots pattern */
.shiny::before {
  --size: calc(100% - var(--shadow-size) * 3);
  --position: 2px;
  --space: calc(var(--position) * 2);
  width: var(--size);
  height: var(--size);
  background: radial-gradient(
      circle at var(--position) var(--position),
      white calc(var(--position) / 4),
      transparent 0
    )
    padding-box;
  background-size: var(--space) var(--space);
  background-repeat: space;
  mask-image: conic-gradient(
    from calc(var(--gradient-angle) + 65deg),
    black,
    transparent 10% 90%,
    black
  ),
  conic-gradient(
    from calc(var(--gradient-angle) + 245deg),
    black,
    transparent 10% 90%,
    black
  );
  border-radius: inherit;
  opacity: 0.4;
  z-index: -1;
}

.shiny.sidebar::before {
  mask-image: conic-gradient(
    from calc(var(--gradient-angle) + 30deg),
    black,
    transparent 10% 90%,
    black
  ),
  conic-gradient(
    from calc(var(--gradient-angle) + 210deg),
    black,
    transparent 10% 90%,
    black
  );

}

/* Inner shimmer */
.shiny::after {
  width: 100%;
  aspect-ratio: 1;
  background: linear-gradient(
    -50deg,
    transparent,
    var(--shiny-cta-highlight),
    transparent
  );
  mask-image: radial-gradient(circle at bottom, transparent 100%, black),
              radial-gradient(circle at top, transparent 100%, black);
  opacity: 0.6;
}

.shiny.sidebar::after {
  height: 100%;
}

/*
Message-style class code is a modified version of code originally found at:
https://codepen.io/aaroniker/pen/rNXRrKp
Original Author: Aaron Iker
*/
@property --pos-x {
  syntax: "<percentage>";
  initial-value: 40.14%;
  inherits: false;
}
@property --pos-y {
  syntax: "<percentage>";
  initial-value: 140%;
  inherits: false;
}
@property --spread-x {
  syntax: "<percentage>";
  initial-value: 130%;
  inherits: false;
}
@property --spread-y {
  syntax: "<percentage>";
  initial-value: 170.06%;
  inherits: false;
}
@property --color-1 {
  syntax: "<color>";
  initial-value: #000000;
  inherits: false;
}
@property --color-2 {
  syntax: "<color>";
  initial-value: #0000ff7f;
  inherits: false;
}
@property --color-3 {
  syntax: "<color>";
  initial-value: #0000ff7f;
  inherits: false;
}
@property --color-4 {
  syntax: "<color>";
  initial-value: #ffffff;
  inherits: false;
}
@property --color-5 {
  syntax: "<color>";
  initial-value: hsla(250, 80%, 2.5%, 1);
  inherits: false;
}
@property --border-angle {
  syntax: "<angle>";
  initial-value: 180deg;
  inherits: true;
}
@property --border-color-1 {
  syntax: "<color>";
  initial-value: hsla(239, 100%, 67%, 0.9);
  inherits: true;
}
@property --border-color-2 {
  syntax: "<color>";
  initial-value: hsla(240, 100%, 93%, 0.1);
  inherits: true;
}
@property --stop-1 {
  syntax: "<percentage>";
  initial-value: 37.35%;
  inherits: false;
}
@property --stop-2 {
  syntax: "<percentage>";
  initial-value: 61.36%;
  inherits: false;
}
@property --stop-3 {
  syntax: "<percentage>";
  initial-value: 78.42%;
  inherits: false;
}
@property --stop-4 {
  syntax: "<percentage>";
  initial-value: 93.52%;
  inherits: false;
}
@property --stop-5 {
  syntax: "<percentage>";
  initial-value: 100%;
  inherits: false;
}

.message-style {
  border-radius: 30px;
  padding: 12px 12px;
  max-width: 75%;
  font-size: inherit;
  font: inherit;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  letter-spacing: inherit;
  font-weight: inherit;
  color: rgba(255, 255, 255, 0.95);
  border: none;
  position: relative;
  appearance: none;
  background: radial-gradient(var(--spread-x) var(--spread-y) at var(--pos-x) var(--pos-y), var(--color-1) var(--stop-1), var(--color-2) var(--stop-2), var(--color-3) var(--stop-3), var(--color-4) var(--stop-4), var(--color-5) var(--stop-5));
  text-shadow: 0 0 2px rgba(0, 0, 0, 0.95);
  outline: none;
  -webkit-tap-highlight-color: transparent;
  transition: --pos-x 0.5s, --pos-y 0.5s, --spread-x 0.5s, --spread-y 0.5s, --color-1 0.5s, --color-2 0.5s, --color-3 0.5s, --color-4 0.5s, --color-5 0.5s, --border-angle 0.5s, --border-color-1 0.5s, --border-color-2 0.5s, --stop-1 0.5s, --stop-2 0.5s, --stop-3 0.5s, --stop-4 0.5s, --stop-5 0.5s;
}

.message-style::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  padding: 1px;
  background-image: linear-gradient(var(--border-angle), var(--border-color-1), var(--border-color-2));
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  pointer-events: none;
}

.message-style.ai{
  --color-1: #000000;
  --color-2: #000000;
  --color-3: #000000;
  --color-4: #ffffff;
  --color-5: hsla(250, 80%, 2.5%, 1);
  --stop-3: 90%;
  --border-color-1: hsla(0, 100%, 100%, 0.9);
  --border-color-2: hsla(0, 0%, 87%, 0.1);
}

